import axios from"axios";const API_URL="http://localhost/dolibarr/htdocs/api/index.php/products",API_KEY="DSAxxkghj9N6SNub050NEi46kc1EF16L";export async function insertProduct(productData){const config={headers:{DOLAPIKEY:API_KEY,"Content-Type":"application/json"}},productPayload={ref:productData.ref,label:productData.label,price:productData.price,stock:productData.stock};try{const response=await axios.post(API_URL,productPayload,config);console.log("Produit inséré avec succès :",response.data)}catch(error){error.response?(console.error("Erreur du serveur:",error.response.status),console.error("Détails de l'erreur:",error.response.data)):error.request?console.error("Aucune réponse du serveur:",error.request):console.error("Erreur dans la requête :",error.message)}}export async function handleFilesUpload(files){Array.from(files).forEach((file=>{const reader=new FileReader;reader.onload=async function(event){const rows=event.target.result.split("\n"),products=[];rows.forEach(((row,index)=>{if(0===index)return;const columns=row.split(",");if(columns.length<4)return void console.error(`Ligne mal formatée (index ${index+1}) dans le fichier :`,row);const productData={ref:columns[0].trim(),label:columns[1].trim(),price:parseFloat(columns[2].trim()),stock:parseInt(columns[3].trim())};isNaN(productData.price)||isNaN(productData.stock)?console.error(`Données invalides pour le produit (index ${index+1}) :`,row):products.push(productData)}));for(const product of products)try{await insertProduct(product),console.log(`Produit ${product.ref} inséré avec succès.`)}catch(error){console.error(`Erreur lors de l'insertion du produit ${product.ref} :`,error)}},reader.readAsText(file)}))}